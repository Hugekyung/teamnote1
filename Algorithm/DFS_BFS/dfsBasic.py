"""
DFS: Depth First Search 깊이우선탐색
그래프에서 깊은 부분을 우선적으로 탐색하는 알고리즘이다.
스택 혹은 재귀함수를 이용해 동작한다.

1. 탐색 시작 노드를 스택에 삽입하고 방문처리
2. 스택의 최상단 노드에 방문하지 않은 인접한 노드가 하나라도 있으면 그 노드를
   스택에 넣고 방문처리를 한다. 방문하지 않은 인접 노드가 없으면 스택에서 최상단 노드를
   꺼낸다.
3. 더 이상 2번 과정을 수행할 수 없을 때까지 반복한다.

- 일반적으로 재귀함수보다 반복문이 속도가 더 빠르다.
- DFS가 재귀 기반이므로, BFS가 더 효율적이다.
"""

def dfs(graph, v, visited):
    # 현재 노드를 방문처리
    visited[v] = True
    print(v, end=' ')

    # 현재 노드와 연결된 다른 노드를 재귀적으로 방문
    for i in graph[v]:
        if not visited[i]: # 방문하지 않은 노드라면
            dfs(graph, i, visited) # 재귀적으로 방문한다.

graph = [
        [], # 1부터 시작하기 때문에 0번째 인덱스는 비워서 처리
        [2,3,8], # 1에 인접한 노드들
        [1,7], # 2에 인접한 노드들..
        [1,4,5],
        [3,5],
        [3,4],
        [7],
        [2,6,8],
        [1,7]
]

visited = [False] * 9

dfs(graph, 1, visited)